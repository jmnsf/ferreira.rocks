<main class="section">
  <div class="container text">
    <h1 class="title is-massive">Code</h1>

    <div class="content">
      <h2 class="title is-size-2">This Website - <a href="https://github.com/jmnsf/ferreira.rocks"><i class="fa fa-github"></i></a></h2>

      <p>Ongoing project of course. Managed to keep it vanilla CSS and HTML for a while, but had to add some JS for variable <code>iframe</code> widths, and eventually to optimize some content being rendered on long pages. More details in the <a href="diary.html#12-learning-web-components">Diary</a>.</p>

      <h6>Main Tech:</h6>
      <ul>
        <li><a href="https://bulma.io/">Bulma</a></li>
        <li><a href="https://webcomponents.org">Web Components</a></li>
      </ul>
    </div>

    <div class="content">
      <h2 class="title is-size-2">Exist Extras - <a href="https://github.com/jmnsf/exist_extras"><i class="fa fa-github"></i></a></h2>

      <p>I needed a way to track nutrition data in <a href="https://exist.io/">Exist</a> so I coded this little tool up that allows you to manually submit nutrition data for a given day. Ideally it would integrate with something like MyFitnessPal or Google Fit, but the former closed their API and the latter&rsquo;s API only throws 500s, so that was that.</p>

      <p>The project is currently not online, but I may get that working still on a DO box sometime.</p>

      <h6>Main Tech:</h6>

      <ul>
        <li><a href="https://elixir-lang.org/">Elixir</a></li>
        <li><a href="https://maru.readme.io/docs">Maru</a></li>
        <li><a href="https://bulma.io/">Bulma</a></li>
      </ul>

      <p>Elixir because it&rsquo;s a pretty awesome language and this project was a nice excuse to use it. Didn&rsquo;t use Phoenix as it felt overkill this particular project.</p>
    </div>

    <div class="content">
      <h2 class="title is-size-2">Melie - <a href="https://meliestore.com"><i class="fa fa-link"></i></a></h2>

      <p>Did all the back-end code while a friend worked on all the front-end. Some interesting challenges on this one:</p>

      <ol>
        <li>
          Managing item stock in real time to guarantee three things:
          <ol>
            <li>What is in your cart isn&rsquo;t purchaseable by someone else who&rsquo;s quicker than you.</li>
            <li>If a customer becomes idle, they lose the "right" to an item until they get back online.</li>
            <li>No two customers can buy the same item.</li>
          </ol>
        </li>
        <li>Complex but efficient product filtering and search using PostgreSQL only. The former required some fancy JOIN-fu to get done right, and the latter was helped tremendously by PostgreSQL&rsquo;s own <a href="https://www.postgresql.org/docs/9.5/static/textsearch.html">fulltext search capabilities</a> which are <em>very</em> decent.</li>
        <li>Editable translations for all product fields (descriptions, titles, etc.). Again, saved by PostgreSQL&rsquo;s great <a href="https://www.postgresql.org/docs/9.5/static/functions-json.html">JSON support</a>.</li>
      </ol>

      <p>If you go around to the shop make sure to buy something! Awesome ladies running the show ðŸ™Œ.</p>

      <h6>Main Tech:</h6>

      <ul>
        <li><a href="http://rubyonrails.org/">Ruby on Rails</a></li>
        <li><a href="https://www.postgresql.org/">PostgreSQL</a></li>
        <li><a href="https://reactjs.org/">React</a></li>
      </ul>
    </div>
  </div>
</main>
